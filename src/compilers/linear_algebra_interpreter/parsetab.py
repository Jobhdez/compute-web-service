
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INTEGER LBRACKET MINUS MUL NAME PLUS RBRACKETexpression : INTEGERexpression : NAMEexpression : vectorexpression : matrixexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression MUL expressionvector : LBRACKET elements RBRACKETmatrix : LBRACKET vectors RBRACKETvectors : vector vectorsvectors : vectorelements : INTEGER elementselements : INTEGER'
    
_lr_action_items = {'INTEGER':([0,6,7,8,9,10,13,],[2,13,2,2,2,13,13,]),'NAME':([0,7,8,9,],[3,3,3,3,]),'LBRACKET':([0,6,7,8,9,14,18,],[6,10,6,6,6,10,-8,]),'$end':([1,2,3,4,5,15,16,17,18,19,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,]),'PLUS':([1,2,3,4,5,15,16,17,18,19,],[7,-1,-2,-3,-4,7,7,7,-8,-9,]),'MINUS':([1,2,3,4,5,15,16,17,18,19,],[8,-1,-2,-3,-4,8,8,8,-8,-9,]),'MUL':([1,2,3,4,5,15,16,17,18,19,],[9,-1,-2,-3,-4,9,9,9,-8,-9,]),'RBRACKET':([11,12,13,14,18,20,21,],[18,19,-13,-11,-8,-12,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,7,8,9,],[1,15,16,17,]),'vector':([0,6,7,8,9,14,],[4,14,4,4,4,14,]),'matrix':([0,7,8,9,],[5,5,5,5,]),'elements':([6,10,13,],[11,11,20,]),'vectors':([6,14,],[12,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> INTEGER','expression',1,'p_expression_int','parser.py',47),
  ('expression -> NAME','expression',1,'p_expression_var','parser.py',51),
  ('expression -> vector','expression',1,'p_expression_vector','parser.py',55),
  ('expression -> matrix','expression',1,'p_expression_matrix','parser.py',59),
  ('expression -> expression PLUS expression','expression',3,'p_expression_sum','parser.py',64),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',68),
  ('expression -> expression MUL expression','expression',3,'p_expression_mul','parser.py',72),
  ('vector -> LBRACKET elements RBRACKET','vector',3,'p_vector','parser.py',76),
  ('matrix -> LBRACKET vectors RBRACKET','matrix',3,'p_matrix','parser.py',80),
  ('vectors -> vector vectors','vectors',2,'p_vectors','parser.py',84),
  ('vectors -> vector','vectors',1,'p_vectors_one','parser.py',88),
  ('elements -> INTEGER elements','elements',2,'p_elements','parser.py',92),
  ('elements -> INTEGER','elements',1,'p_elements_int','parser.py',96),
]
